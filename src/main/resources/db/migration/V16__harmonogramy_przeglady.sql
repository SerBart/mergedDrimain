-- Tables (idempotent)
CREATE TABLE IF NOT EXISTS harmonogramy (
                                            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                            data DATE,
                                            opis VARCHAR(1000),
    maszyna_id BIGINT,
    osoba_id BIGINT,
    status VARCHAR(40) NOT NULL
    );

CREATE TABLE IF NOT EXISTS przeglady (
                                         id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                         data DATE NOT NULL,
                                         typ VARCHAR(40) NOT NULL,
    opis VARCHAR(1000),
    maszyna_id BIGINT,
    osoba_id BIGINT,
    status VARCHAR(40) NOT NULL
    );

-- FKs for harmonogramy (dodaj tylko jeśli są obie tabele)
DO $$
BEGIN
  IF to_regclass('public.harmonogramy') IS NOT NULL
     AND to_regclass('public.maszyny') IS NOT NULL THEN
BEGIN
ALTER TABLE public.harmonogramy
    ADD CONSTRAINT fk_harmonogramy_maszyna
        FOREIGN KEY (maszyna_id) REFERENCES public.maszyny(id);
EXCEPTION WHEN duplicate_object THEN
      -- constraint already exists
      NULL;
END;
END IF;

  IF to_regclass('public.harmonogramy') IS NOT NULL
     AND to_regclass('public.osoby') IS NOT NULL THEN
BEGIN
ALTER TABLE public.harmonogramy
    ADD CONSTRAINT fk_harmonogramy_osoba
        FOREIGN KEY (osoba_id) REFERENCES public.osoby(id);
EXCEPTION WHEN duplicate_object THEN
      NULL;
END;
END IF;
END
$$ LANGUAGE plpgsql;

-- FKs for przeglady (dodaj tylko jeśli są obie tabele)
DO $$
BEGIN
  IF to_regclass('public.przeglady') IS NOT NULL
     AND to_regclass('public.maszyny') IS NOT NULL THEN
BEGIN
ALTER TABLE public.przeglady
    ADD CONSTRAINT fk_przeglady_maszyna
        FOREIGN KEY (maszyna_id) REFERENCES public.maszyny(id);
EXCEPTION WHEN duplicate_object THEN
      NULL;
END;
END IF;

  IF to_regclass('public.przeglady') IS NOT NULL
     AND to_regclass('public.osoby') IS NOT NULL THEN
BEGIN
ALTER TABLE public.przeglady
    ADD CONSTRAINT fk_przeglady_osoba
        FOREIGN KEY (osoba_id) REFERENCES public.osoby(id);
EXCEPTION WHEN duplicate_object THEN
      NULL;
END;
END IF;
END
$$ LANGUAGE plpgsql;